{"name":"string-format","tagline":"An alternative for String.format() when it comes to big strings.","body":"# Before string-format...\r\n\r\nThere are a few situations in which you need to construct a big string with a lot of arguments.\r\nIn these situations, one of your options is to concatenate each part like this:\r\n\r\n```java\r\nString query = \"SELECT \" + COLUMN_ID + \", \" + COLUMN_NAME + \", \" + COLUMN_LATITUDE + \", \" + COLUMN_LONGITUDE + \" \" +\r\n                        \"FROM \" + TABLE_NAME + \" \" +\r\n                        \"WHERE \" + COLUMN_NAME + \" LIKE \" + search + \" \" +\r\n                        \"ORDER BY \" + COLUMN_NAME + \" LIMIT \" + maxResult + \" OFFSET \" + from;\r\n```\r\n\r\n**This is bad.** You have no overview of the string, there's a lot of boilerplate code in it. Moreover, if you need to change the position of any element you need to take care of this boilerplate code. Another solution, more elegant:\r\n\r\n```java\r\nString query = String.format(\"SELECT %s, %s, %s, %s \" +\r\n                        \"FROM %s \" +\r\n                        \"WHERE %s LIKE %s \" +\r\n                        \"ORDER BY %s LIMIT %s OFFSET %s\",\r\n                        COLUMN_ID, COLUMN_NAME, COLUMN_LATITUDE, COLUMN_LONGITUDE, \r\n                        TABLE_NAME, COLUMN_NAME, COLUMN_NAME, search, maxResult, from);\r\n```\r\n\r\n**This is still bad.** The readability is better yet not optimal, you don't know what are these ```%s``` unless you count the following arguments. The same thing if you need to maintain this string.\r\n\r\n# Meet string-format!\r\n\r\nHere is a better solution, that improves readability and maintenance.\r\n\r\n```java\r\nString query = Strings.format(\r\n\t\t\t\"SELECT {id}, {name}, {latitude}, {longitude} \" +\r\n\t\t\t\t\t\"FROM {table} \" +\r\n\t\t\t\t\t\"WHERE {search_field} LIKE {search_value} \" +\r\n\t\t\t\t\t\"ORDER BY {name} LIMIT {limit} OFFSET {offset}\")\r\n\t\t\t.with(\"id\", COLUMN_ID)\r\n\t\t\t.with(\"name\", COLUMN_NAME)\r\n\t\t\t.with(\"latitude\", COLUMN_LATITUDE)\r\n\t\t\t.with(\"longitude\", COLUMN_LONGITUDE)\r\n\t\t\t.with(\"table\", TABLE_NAME)\r\n\t\t\t.with(\"search_field\", COLUMN_NAME)\r\n\t\t\t.with(\"search_value\", search)\r\n\t\t\t.with(\"limit\", maxResult)\r\n\t\t\t.with(\"offset\", from)\r\n\t\t\t.make();\r\n```\r\n\r\n> **NOTE:** If you forget an argument or add an extra argument that is not used in the string, it will raise an ```exception``` that tells you exactly what's wrong. See the [tests](https://github.com/JoanZapata/string-format/blob/master/src/test/java/com/joanzapata/utils/StringsTest.java#L23-L48) for more examples.\r\n\r\n# Get it\r\n\r\n[Download JAR](http://search.maven.org/remotecontent?filepath=com/joanzapata/utils/string-format/1.0.0/string-format-1.0.0.jar) or via **Maven Central**\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.joanzapata.utils</groupId>\r\n    <artifactId>string-format</artifactId>\r\n    <version>1.0.0</version>\r\n</dependency>\r\n```\r\n\r\n# License\r\n\r\n```\r\nCopyright 2013 Joan Zapata\r\n\r\nLicensed under the Apache License, Version 2.0 (the \"License\");\r\nyou may not use this file except in compliance with the License.\r\nYou may obtain a copy of the License at\r\n\r\n    http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nUnless required by applicable law or agreed to in writing, software\r\ndistributed under the License is distributed on an \"AS IS\" BASIS,\r\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\nSee the License for the specific language governing permissions and\r\nlimitations under the License.\r\n``\r\n","google":"UA-45181639-1","note":"Don't delete this file! It's used internally to help with page regeneration."}